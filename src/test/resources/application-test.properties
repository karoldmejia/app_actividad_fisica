spring.application.name=back
server.port=8083
server.servlet.context-path=/compunet2-2025

# Data Source
# spring.datasource.url=jdbc:postgresql://localhost:5432/test_compu2
# spring.datasource.username=postgres
# spring.datasource.password=postgres
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Or jdbc:h2:./db-kevin;DB_CLOSE_DELAY=-1
# Is DB_CLOSE_DELAY=-1 necessary? What does it do? It is useful to keep the database open after the last connection is closed.
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:file:./db-kevin-test;DB_CLOSE_DELAY=-1
spring.datasource.username=postgres
spring.datasource.password=postgres
# None, create, update, create-drop
spring.jpa.hibernate.ddl-auto=create-drop
# Run data.sql or schema.sql on startup
spring.sql.init.mode=always
spring.jpa.show-sql=false
# This property is used to defer the datasource initialization until after the application context is ready.
spring.jpa.defer-datasource-initialization=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# logging.level.org.hibernate.engine.transaction.internal=DEBUG
# Logging de las peticiones entrantes
# This is for all the project
logging.level.root = INFO 
# Spring level
logging.level.org.springframework.web=INFO
# Package level
logging.level.com.games.back = WARN

logging.file.name=logs/demo1.log
logging.file.path=logs
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS

# Número máximo de conexiones que se pueden mantener en el pool.
spring.datasource.hikari.maximum-pool-size=10

# Número mínimo de conexiones inactivas que HikariCP mantendrá en el pool.
spring.datasource.hikari.minimum-idle=5

# Tiempo máximo en milisegundos que una conexión inactiva puede permanecer en el pool antes de ser cerrada.
spring.datasource.hikari.idle-timeout=30000

# Tiempo máximo de vida en milisegundos de una conexión en el pool antes de ser cerrada y recreada.
spring.datasource.hikari.max-lifetime=1800000

# Tiempo máximo en milisegundos que HikariCP esperará para obtener una conexión del pool antes de lanzar una excepción.
spring.datasource.hikari.connection-timeout=20000